{"version":3,"sources":["hooks/useJsonFetch.jsx","components/GetFetchData/GetFetchData.jsx","components/GetFetchError/GetFetchError.jsx","components/GetFetchLoading/GetFetchLoading.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useJsonFetch","url","opts","useState","data","setData","loading","setLoading","error","setError","useEffect","a","fetch","response","ok","Error","statusText","json","status","message","setTimeout","fetchData","GetFetchData","process","Fragment","className","GetFetchError","GetFetchLoading","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAEe,SAASA,EAAaC,GAAmB,IAAdC,EAAa,uDAAN,KAAM,EAC7BC,mBAAS,MADoB,mBAC9CC,EAD8C,KACxCC,EADwC,OAEvBF,oBAAS,GAFc,mBAE9CG,EAF8C,KAErCC,EAFqC,OAG3BJ,mBAAS,MAHkB,mBAG9CK,EAH8C,KAGvCC,EAHuC,KAyBrD,OApBAC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,6DAChBJ,GAAW,GACXE,EAAS,MAFO,kBAISG,MAAMX,EAAKC,GAJpB,WAIRW,EAJQ,QAKAC,GALA,sBAKU,IAAIC,MAAMF,EAASG,YAL7B,wBAMKH,EAASI,OANd,QAMRb,EANQ,OAOdC,EAAQD,EAAKc,QAPC,kDASdT,EAAS,gLAAD,OAAqCR,EAArC,aAA6C,KAAEkB,QAA/C,MACRd,EAAQ,MACRe,YAAW,kBAAMX,EAAS,QAAO,KAXnB,yBAadF,GAAW,GAbG,6EAAH,qDAgBfc,KACC,CAACnB,EAAMD,IAEH,CAAC,CAAEG,OAAME,UAASE,U,WCxBZ,SAASc,IACtB,IAAMrB,EAAG,UAAMsB,mDAAN,QAD4B,EAEFvB,EAAaC,GAFX,sBAE5BG,EAF4B,EAE5BA,KAAME,EAFsB,EAEtBA,QAASE,EAFa,EAEbA,MAExB,OACE,eAAC,IAAMgB,SAAP,WACGlB,GAAW,sBAAMmB,UAAU,UAAhB,8JACXjB,GAAS,sBAAMiB,UAAU,QAAhB,SAAyBjB,IAClCJ,GAAQ,4KAAiCH,EAAjC,KAAwCG,QCRxC,SAASsB,IACtB,IAAMzB,EAAG,UAAMsB,mDAAN,SAD6B,EAEHvB,EAAaC,GAFV,sBAE7BG,EAF6B,EAE7BA,KAAME,EAFuB,EAEvBA,QAASE,EAFc,EAEdA,MAExB,OACE,eAAC,IAAMgB,SAAP,WACGlB,GAAW,sBAAMmB,UAAU,UAAhB,8JACXjB,GAAS,sBAAMiB,UAAU,QAAhB,SAAyBjB,IAClCJ,GAAQ,4KAAiCH,EAAjC,KAAwCG,QCRxC,SAASuB,IACtB,IAAM1B,EAAG,UAAMsB,mDAAN,WAD+B,EAELvB,EAAaC,GAFR,sBAE/BG,EAF+B,EAE/BA,KAAME,EAFyB,EAEzBA,QAASE,EAFgB,EAEhBA,MAExB,OACE,eAAC,IAAMgB,SAAP,WACGlB,GAAW,sBAAMmB,UAAU,UAAhB,8JACXjB,GAAS,sBAAMiB,UAAU,QAAhB,SAAyBjB,IAClCJ,GAAQ,4KAAiCH,EAAjC,KAAwCG,QCOxCwB,MAZf,WAEE,OACE,sBAAKH,UAAU,qBAAf,UACE,cAACH,EAAD,IACA,cAACK,EAAD,IACA,cAACD,EAAD,QCASG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d33cacb.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useJsonFetch(url, opts = null) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(url, opts);\n        if (!response.ok) throw new Error(response.statusText);\n        const data = await response.json();\n        setData(data.status);\n      } catch (e) {\n        setError(`Ошибка загрузки данных с ресурса ${url} (${e.message})`);\n        setData(null);\n        setTimeout(() => setError(null), 3000);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [opts, url]);\n\n  return [{ data, loading, error }];\n}\n","import React from 'react';\r\nimport useJsonFetch from '../../hooks/useJsonFetch';\r\n\r\nexport default function GetFetchData() {\r\n  const url = `${process.env.REACT_APP_SERVER_URL}data`;\r\n  const [{ data, loading, error }] = useJsonFetch(url);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <span className=\"loading\">Загрузка данных, подождите...</span>}\r\n      {error && <span className=\"error\">{error}</span>}\r\n      {data && <span>Получили данные с ресурса {url}: {data}</span>}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport useJsonFetch from '../../hooks/useJsonFetch';\r\n\r\nexport default function GetFetchError() {\r\n  const url = `${process.env.REACT_APP_SERVER_URL}error`;\r\n  const [{ data, loading, error }] = useJsonFetch(url);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <span className=\"loading\">Загрузка данных, подождите...</span>}\r\n      {error && <span className=\"error\">{error}</span>}\r\n      {data && <span>Получили данные с ресурса {url}: {data}</span>}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport useJsonFetch from '../../hooks/useJsonFetch';\r\n\r\nexport default function GetFetchLoading() {\r\n  const url = `${process.env.REACT_APP_SERVER_URL}loading`;\r\n  const [{ data, loading, error }] = useJsonFetch(url);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <span className=\"loading\">Загрузка данных, подождите...</span>}\r\n      {error && <span className=\"error\">{error}</span>}\r\n      {data && <span>Получили данные с ресурса {url}: {data}</span>}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport GetFetchData from './components/GetFetchData/GetFetchData';\nimport GetFetchError from './components/GetFetchError/GetFetchError';\nimport GetFetchLoading from './components/GetFetchLoading/GetFetchLoading';\n\nfunction App() {\n\n  return (\n    <div className='component__wrapper'>\n      <GetFetchData />\n      <GetFetchLoading />\n      <GetFetchError />\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}